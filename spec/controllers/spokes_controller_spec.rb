require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator.  If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails.  There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.
#
# Compared to earlier versions of this generator, there is very limited use of
# stubs and message expectations in this spec.  Stubs are only used when there
# is no simpler way to get a handle on the object needed for the example.
# Message expectations are only used when there is no simpler way to specify
# that an instance is receiving a specific message.

describe SpokesController do

  # This should return the minimal set of attributes required to create a valid
  # Spoke. As you add validations to Spoke, be sure to
  # adjust the attributes here as well.
  let(:valid_attributes) { FactoryGirl.attributes_for :spoke }

  describe 'GET index' do
    it 'assigns all spokes as @spokes' do
      spoke = Spoke.create! valid_attributes
      get :index, format: :json
      assigns(:spokes).should eq([spoke])
    end
  end

  describe 'GET show' do
    it 'assigns the requested spoke as @spoke' do
      spoke = Spoke.create! valid_attributes
      get :show, id: spoke.to_param, format: :json
      assigns(:spoke).should eq(spoke)
    end
  end
end
